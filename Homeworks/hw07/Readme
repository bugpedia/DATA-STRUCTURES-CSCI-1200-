HOMEWORK 7: WORD FREQUENCY MAPS


NAME:  ALSENY SYLLA


Websites:
- www.cplusplus.com
- LMS forum



ESTIMATE OF # OF HOURS SPENT ON THIS ASSIGNMENT:  10 hours



ANALYSIS OF PERFORMANCE OF YOUR ALGORITHM:
(order notation & concise paragraph, < 200 words)

n = total number of words in the sample text file
m = number of unique words in the file
w = width of the sequencing window
p = average number of words observed to follow a particular word

How much memory will the map data structure require, in terms of n, m,
w, and p (order notation for memory use)?

The map data structure memory usage is not related to to total number of words 
in the sample text file. Thus, the order notation of memory use is O(m*w*p).

What is the order notation for performance (running time) of each of
the commands?

Load: For loading, my program either calls the LoadSampleText or 
LoadSampleText_3 functions. Both of those are O(n * log m), because they both 
loop through all the words in the text file, and, for the worst case scenario, 
the map contains all unique words in the file.

Print: The first thing done when print is called is the ReadQuotedWords
function, which goes through all the words in the text file. Then, we must find
the words to print. The resulting order notation is O(n + log m + log p), since 
we must find the word given all the data, then find the most frequent word from 
all the words that are observed to follow the first word found.

Generate: Similarly to print, ReadQuotedWords is the first thing called. Then, 
the NextWord function is called. The order notation is O(n + log m + log p).

EXTRA CREDIT
Parsing & using punctuation data, implementation supports *any*
window size, new test cases (describe & summarize performance, but
don't include large datasets with submission).



MISC. COMMENTS TO GRADER:  
(optional, please be concise!)


